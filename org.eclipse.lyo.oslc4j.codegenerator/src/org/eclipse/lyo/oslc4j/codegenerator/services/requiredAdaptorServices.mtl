[comment encoding = UTF-8 /]
[comment
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License 1.0
 * which is available at http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Simple
 */
/]
[module requiredAdaptorServices('http://org.eclipse.lyo/oslc4j/adaptorInterface')/]

[import org::eclipse::lyo::oslc4j::codegenerator::services::adaptorInterfaceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::resourceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::services/]

[query public javaClassPackageNameForClient(aRequiredAdaptor : RequiredAdaptor, anAdaptorInterface : AdaptorInterface) : String =
javaBasePackageName(anAdaptorInterface).concat('.clients')
/]

[query public javaClassNameForClient(aRequiredAdaptor : RequiredAdaptor) : String =
if (aRequiredAdaptor.oclIsTypeOf(GenericRequiredAdaptor)) then
    javaString(aRequiredAdaptor.oclAsType(GenericRequiredAdaptor).name, 'oslc', true).concat('Client')
else
    javaName(aRequiredAdaptor.oclAsType(ModelledRequiredAdaptor).adaptorInterface, true).concat('Client')
endif
/]

[query public javaClassFullNameForClient(aRequiredAdaptor : RequiredAdaptor, anAdaptorInterface : AdaptorInterface) : String =
javaClassPackageNameForClient(aRequiredAdaptor, anAdaptorInterface).concat('.').concat(javaClassNameForClient(aRequiredAdaptor))
/]

[query public javaClassFullFileNameForClient(aRequiredAdaptor : RequiredAdaptor, anAdaptorInterface : AdaptorInterface) : String =
javaFilesBasePath(anAdaptorInterface).concatenatePaths(javaClassPackageNameForClient(aRequiredAdaptor, anAdaptorInterface).substituteAll('.', '/')).concat('/').concat(javaClassNameForClient(aRequiredAdaptor)).concat('.java')
/]
