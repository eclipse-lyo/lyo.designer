[comment encoding = UTF-8 /]
[comment
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License 1.0
 * which is available at http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Simple
 */
/]
[module generatePomXml('http://org.eclipse.lyo/oslc4j/adaptorInterface')]

[import org::eclipse::lyo::oslc4j::codegenerator::services::services/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::serviceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::storeServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::resourceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::adaptorInterfaceServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::domainSpecificationServices/]
[import org::eclipse::lyo::oslc4j::codegenerator::services::vocabularyServices/]

[template private projectHeader(name : String, mavenProjectConfiguration : MavenProjectConfiguration, serverImplementation : Boolean)]
<modelVersion>4.0.0</modelVersion>
<!-- [protected ('header')]
-->
<!-- TODO: Add additional header properties here to avoid them be overridden upon future re-generation -->
<!-- [/protected]
-->
<groupId>[mavenProjectConfiguration.groupId/]</groupId>
<artifactId>[mavenProjectConfiguration.artifactId/]</artifactId>
<version>[mavenProjectConfiguration.version/]</version>
<packaging>[if serverImplementation]war[else]jar[/if]</packaging>
<name>[name/]</name>
[/template]

[template private mavenProperties(mavenProjectConfiguration : MavenProjectConfiguration, swaggerDocumentationEnabled : Boolean)]
<properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <version.lyo>[mavenProjectConfiguration.lyoVersion/]</version.lyo>
    <jersey.version>2.25.1</jersey.version>
    [if (swaggerDocumentationEnabled)]
    <swagger.version>2.1.2</swagger.version>
    <swagger-ui.version>3.52.3</swagger-ui.version>
    [/if]
    <!-- [protected ('properties')]
    -->
    <!-- TODO: Add additional properties here to avoid them be overridden upon future re-generation -->
    <!-- [/protected]
    -->
</properties>
[/template]

[template private repositories(traceabilityContext : OclAny)]
<repositories>
    <!-- [protected ('repositories')]
    -->
    <!-- TODO: Add additional repositories here to avoid them be overridden upon future re-generation -->
    <!-- [/protected]
    -->
    <repository>
        <id>lyo-releases</id>
        <name>Eclipse Lyo Releases</name>
        <url>https://repo.eclipse.org/content/repositories/lyo-releases/</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
    </repository>
    <repository>
        <id>lyo-snapshots</id>
        <name>Eclipse Lyo Snapshots</name>
        <url>https://repo.eclipse.org/content/repositories/lyo-snapshots/</url>
        <releases>
            <enabled>false</enabled>
        </releases>
    </repository>
</repositories>
[/template]

[template private generalDependencies(traceabilityContext : OclAny)]
<!-- Specific dependencies -->
<!-- [protected ('dependencies')]
-->
<!-- TODO: Add additional dependencies here to avoid them be overridden upon future re-generation -->
<!-- [/protected]
-->
<!-- General dependencies -->
<dependency>
    <groupId>org.slf4j</groupId>
    <artifactId>slf4j-simple</artifactId>
    <version>1.7.21</version>
    <scope>runtime</scope>
</dependency>
[/template]

[template private servletDependencies(serverImplementation : Boolean) post (trim())]
<!-- Servlet dependencies -->
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>3.1.0</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>jstl</artifactId>
    <version>1.2</version>
    <scope>provided</scope>
</dependency>
[if serverImplementation]
<dependency>
    <groupId>javax.inject</groupId>
    <artifactId>javax.inject</artifactId>
    <version>1</version>
</dependency>
<dependency>
    <groupId>org.glassfish.jersey.core</groupId>
    <artifactId>jersey-server</artifactId>
    <version>${jersey.version}</version>
    <exclusions>
        <exclusion>
            <!--we have a proper javax.inject:javax.inject dependency-->
            <!--also see https://stackoverflow.com/questions/25212944/why-does-hk2-repackage-everything-->
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>javax.inject</artifactId>
        </exclusion>
    </exclusions>
</dependency>
<dependency>
    <groupId>org.glassfish.jersey.containers</groupId>
    <artifactId>jersey-container-servlet</artifactId>
    <version>${jersey.version}</version>
    <exclusions>
        <exclusion>
            <!--we have a proper javax.inject:javax.inject dependency-->
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>javax.inject</artifactId>
        </exclusion>
    </exclusions>
</dependency>
[/if]
[/template]

[template private lyoDependencies(serverImplementation : Boolean, clientImplementation : Boolean, authenticationEnabled : Boolean, trsServiceEnabled : Boolean, storeEnabled : Boolean) post (trim())]
<!-- Lyo dependencies -->
<dependency>
    <groupId>org.eclipse.lyo.oslc4j.core</groupId>
    <artifactId>oslc4j-core</artifactId>
    <version>${version.lyo}</version>
</dependency>
[if serverImplementation]
<dependency>
    <groupId>org.eclipse.lyo.oslc4j.core</groupId>
    <artifactId>oslc4j-jena-provider</artifactId>
    <version>${version.lyo}</version>
</dependency>
<dependency>
    <groupId>org.eclipse.lyo.oslc4j.core</groupId>
    <artifactId>oslc4j-json4j-provider</artifactId>
    <version>${version.lyo}</version>
</dependency>
[if trsServiceEnabled]
<dependency>
    <groupId>org.eclipse.lyo.trs</groupId>
    <artifactId>trs-server</artifactId>
    <version>${version.lyo}</version>
</dependency>
[/if]
[if storeEnabled]
<dependency>
    <groupId>org.eclipse.lyo.store</groupId>
    <artifactId>store-core</artifactId>
    <version>${version.lyo}</version>
</dependency>
[/if]
[/if]
[if clientImplementation]
<dependency>
    <groupId>org.eclipse.lyo.clients</groupId>
    <artifactId>oslc-client</artifactId>
    <version>${version.lyo}</version>
</dependency>
[/if]
[if authenticationEnabled]
<dependency>
    <groupId>org.eclipse.lyo.server</groupId>
    <artifactId>oauth-core</artifactId>
    <version>${version.lyo}</version>
</dependency>
<dependency>
    <groupId>org.eclipse.lyo.server</groupId>
    <artifactId>oauth-consumer-store</artifactId>
    <version>${version.lyo}</version>
</dependency>
<dependency>
    <groupId>org.eclipse.lyo.server</groupId>
    <artifactId>oauth-webapp</artifactId>
    <version>${version.lyo}</version>
    <type>war</type>
</dependency>
[/if]
[/template]

[template public additionalDependencies(traceabilityContext : OclAny) post (trim())]
[/template]

[template public generatePomXml(anAdaptorInterface : AdaptorInterface)]
[if (not anAdaptorInterface.doNotGenerateProjectFiles())]
[let mavenProjectConfiguration : MavenProjectConfiguration = anAdaptorInterface.configuration.projectConfiguration]
[let mavenServerConfiguration : MavenServerConfiguration = anAdaptorInterface.configuration]
[file (anAdaptorInterface.filesBasePath().concatenatePaths('/pom.xml'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    [projectHeader(anAdaptorInterface.name, mavenProjectConfiguration, true)/]
    [mavenProperties(mavenProjectConfiguration, anAdaptorInterface.swaggerDocumentationEnabled())/]
    [repositories()/]
    <!-- [protected ('pre_dependencies')]
    -->
    <!-- [/protected]
    -->
    <dependencies>
        [generalDependencies()/]
        [servletDependencies(true)/]
        [lyoDependencies(true, not anAdaptorInterface.requiredAdaptors->isEmpty(), anAdaptorInterface.authenticationEnabled(), anAdaptorInterface.trsServiceEnabled(), anAdaptorInterface.storeEnabled())/]
        [additionalDependencies()/]
        [if (anAdaptorInterface.swaggerDocumentationEnabled())]
        <!-- Swagger dependencies -->
        <dependency>
          <groupId>io.swagger.core.v3</groupId>
          <artifactId>swagger-jaxrs2</artifactId>
          <version>${swagger.version}</version>
        </dependency>
        <dependency>
          <groupId>io.swagger.core.v3</groupId>
          <artifactId>swagger-jaxrs2-servlet-initializer-v2</artifactId>
          <version>${swagger.version}</version>
        </dependency>
        [/if]
        [if (anAdaptorInterface.generateJspFilesForOslcUI())]
        <!-- OSLC-UI dependencies -->
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>oslc-ui-model</artifactId>
            <version>${version.lyo}</version>
        </dependency>        
        [/if]
    </dependencies>
    <!-- [protected ('post_dependencies')]
    -->
    <!-- [/protected]
    -->
    <build>
        [if (not mavenServerConfiguration.applicationContextPath.substituteAll('/', '').trim().isNullOrEmpty())]
        <finalName>[mavenServerConfiguration.applicationContextPath.substituteAll('/', '').trim()/]</finalName>
        [/if]
        <plugins>
            <!-- [protected ('plugins')]
            -->
            <!-- TODO: Add additional plugins here to avoid them be overridden upon future re-generation -->
            <!-- [/protected]
            -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>10.0.7</version>
                <configuration>
                  <webApp>
                    <contextPath>[mavenServerConfiguration.applicationContextPath/]</contextPath>
                  </webApp>
                  <httpConnector>
                    <port>[mavenServerConfiguration.jettyPort/]</port>
                  </httpConnector>
                  <scan>5</scan>
                </configuration>
            </plugin>
            [if (anAdaptorInterface.swaggerDocumentationEnabled())]
            <!-- Swagger-ui -->
            <plugin>
                <!-- Download Swagger UI webjar. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>swagger-ui</artifactId>
                                    <version>${swagger-ui.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/swagger-ui</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Add Swagger UI resources to the war file. -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <webResources combine.children="append">
                        <resource>
                            <directory>${project.build.directory}/swagger-ui/META-INF/resources/webjars/swagger-ui/${swagger-ui.version}</directory>
                            <includes>
                                <include>**/*.*</include>
                            </includes>
                            <targetPath>/swagger-ui/dist</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            [/if]
        </plugins>
    </build>
    <!-- [protected ('post_build')]
    -->
    <!-- [/protected]
    -->
</project>
[/file]
[/let]
[/let]
[/if]
[/template]

[template public generatePomXml(aSpecification : Specification, anAdaptorInterface : AdaptorInterface, defaultJavaFilesPath : String)]
[if (not aSpecification.doNotGenerateProjectFiles())]
[let mavenProjectConfiguration : MavenProjectConfiguration = aSpecification.configuration.projectConfiguration]
[file (aSpecification.filesBasePath(anAdaptorInterface, defaultJavaFilesPath).concatenatePaths('/pom.xml'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    [projectHeader(mavenProjectConfiguration.artifactId, mavenProjectConfiguration, false)/]
    [mavenProperties(mavenProjectConfiguration, false)/]
    [repositories()/]
    <!-- [protected ('pre_dependencies')]
    -->
    <!-- [/protected]
    -->
    <dependencies>
        [generalDependencies()/]
        [servletDependencies(false)/]
        [lyoDependencies(false, false, false, false, false)/]
    </dependencies>
    <!-- [protected ('post_dependencies')]
    -->
    <!-- [/protected]
    -->
</project>
[/file]
[/let]
[/if]
[/template]

[template public generatePomXml(aDomainSpecification : DomainSpecification, anAdaptorInterface : AdaptorInterface, defaultJavaFilesPath : String)]
[if (not aDomainSpecification.doNotGenerateProjectFiles())]
[let mavenProjectConfiguration : MavenProjectConfiguration = aDomainSpecification.configuration.projectConfiguration]
[file (aDomainSpecification.filesBasePath(anAdaptorInterface, defaultJavaFilesPath).concatenatePaths('/pom.xml'), false, 'UTF-8')]
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    [projectHeader(aDomainSpecification.name, mavenProjectConfiguration, false)/]
    [mavenProperties(mavenProjectConfiguration, false)/]
    [repositories()/]
    <!-- [protected ('pre_dependencies')]
    -->
    <!-- [/protected]
    -->
    <dependencies>
        [generalDependencies()/]
        [servletDependencies(false)/]
        [lyoDependencies(false, false, false, false, false)/]
    </dependencies>
    <!-- [protected ('post_dependencies')]
    -->
    <!-- [/protected]
    -->
</project>
[/file]
[/let]
[/if]
[/template]
