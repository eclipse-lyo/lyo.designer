[comment encoding = UTF-8 /]
[comment
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License 1.0
 * which is available at http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: EPL-2.0 OR BSD-3-Simple
 */
/]
[module domainSpecificationServices('http://org.eclipse.lyo/oslc4j/adaptorInterface')/]

[import org::eclipse::lyo::oslc4j::codegenerator::services::services/]

[query public definingDomainSpecification(aProperty: ResourceProperty) : DomainSpecification =
aProperty.eContainer(DomainSpecification)
/]

[query public definingDomainSpecification(aResource: Resource) : DomainSpecification =
aResource.eContainer(DomainSpecification)
/]

[query public javaInterfacePackageNameForConstants(aDomainSpecification: DomainSpecification, anAdaptorInterface : AdaptorInterface, defaultJavaPackageName : String) : String = 
javaPackageName(aDomainSpecification, anAdaptorInterface, defaultJavaPackageName)
/]

[query public javaInterfaceNameForConstants(aDomainSpecification: DomainSpecification) : String =
javaString(aDomainSpecification.namespacePrefix.name, 'oslc', true).concat('DomainConstants')
/]

[query public javaInterfaceFullNameForConstants(aDomainSpecification: DomainSpecification, anAdaptorInterface : AdaptorInterface, defaultJavaPackageName : String) : String = 
javaInterfacePackageNameForConstants(aDomainSpecification, anAdaptorInterface, defaultJavaPackageName).concat('.').concat(javaInterfaceNameForConstants(aDomainSpecification))
/]

[query public javaInterfaceFullFileNameForConstants(aDomainSpecification: DomainSpecification, anAdaptorInterface : AdaptorInterface, defaultJavaFullFilesPath : String, defaultJavaPackageName : String) : String = 
    javaFilesBasePath(aDomainSpecification, anAdaptorInterface, defaultJavaFullFilesPath)
    .concatenatePaths(javaInterfacePackageNameForConstants(aDomainSpecification, anAdaptorInterface, defaultJavaPackageName).substituteAll('.', '/'))
    .concatenatePaths(javaInterfaceNameForConstants(aDomainSpecification))
    .concat('.java')
/]
